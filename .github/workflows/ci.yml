name: CI
on:
  push:
    branches:
      - main
    paths:
      - migrations/**
      - src/**
      - twilight/**
      - .rustfmt.toml
      - Cargo.lock
      - Cargo.toml
      - build.rs
  pull_request:
    branches:
      - main
    paths:
      - migrations/**
      - src/**
      - twilight/**
      - .rustfmt.toml
      - Cargo.lock
      - Cargo.toml
      - build.rs
env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUSTFLAGS: -Cdebuginfo=1
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Install rust
        id: install_rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Fetch cache
        uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: Rustfmt
        if: always() && steps.install_rust.outcome == 'success'
        run: cargo fmt -- --check
  release:
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    needs: ci
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            filename: ./target/release/modmail#Linux
          - os: windows-latest
            filename: ./target/release/modmail.exe#Windows
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --release --locked
      - name: Upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${GITHUB_REF#refs/tags/} ${{ matrix.filename }}
